;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2017 Retargetable Decompiler <info@retdec.com>
;;
;; Decompiler release: v2.2.1 (2016-09-07)
;; Decompilation date: 2017-07-02 14:09:58
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80483dc -- 0x80483fe
0x80483dc:   53                              	push ebx
0x80483dd:   83 ec 08                        	sub esp, 0x8
0x80483e0:   e8 eb 00 00 00                  	call 0x80484d0 <__x86.get_pc_thunk.bx>
0x80483e5:   81 c3 1b 1c 00 00               	add ebx, 0x1c1b
0x80483eb:   8b 83 fc ff ff ff               	mov eax, dword [ ebx + 0xfffffffc ]
0x80483f1:   85 c0                           	test eax, eax
0x80483f3:   74 05                           	jz 0x80483fa <_init+0x1e>
0x80483f5:   e8 96 00 00 00                  	call 0x8048490 <function_8048490>
0x80483fa:   83 c4 08                        	add esp, 0x8
0x80483fd:   5b                              	pop ebx
0x80483fe:   c3                              	ret
; section: .plt
; function: function_8048400 at 0x8048400 -- 0x804848f
0x8048400:   ff 35 04 a0 04 08               	push dword [ 0x804a004 ]
0x8048406:   ff 25 08 a0 04 08               	jmp dword [ 0x804a008 ]
0x804840c:   00 00                           	add byte [ eax ], al
0x804840e:   00 00                           	add byte [ eax ], al
0x8048410:   ff 25 0c a0 04 08               	jmp dword [ 0x804a00c ]
0x8048416:   68 00 00 00 00                  	push 0x0
0x804841b:   e9 e0 ff ff ff                  	jmp 0xffffffe0
0x8048420:   ff 25 10 a0 04 08               	jmp dword [ 0x804a010 ]
0x8048426:   68 08 00 00 00                  	push 0x8
0x804842b:   e9 d0 ff ff ff                  	jmp 0xffffffd0
0x8048430:   ff 25 14 a0 04 08               	jmp dword [ 0x804a014 ]
0x8048436:   68 10 00 00 00                  	push 0x10
0x804843b:   e9 c0 ff ff ff                  	jmp 0xffffffc0
0x8048440:   ff 25 18 a0 04 08               	jmp dword [ 0x804a018 ]
0x8048446:   68 18 00 00 00                  	push 0x18
0x804844b:   e9 b0 ff ff ff                  	jmp 0xffffffb0
0x8048450:   ff 25 1c a0 04 08               	jmp dword [ 0x804a01c ]
0x8048456:   68 20 00 00 00                  	push 0x20
0x804845b:   e9 a0 ff ff ff                  	jmp 0xffffffa0
0x8048460:   ff 25 20 a0 04 08               	jmp dword [ 0x804a020 ]
0x8048466:   68 28 00 00 00                  	push 0x28
0x804846b:   e9 90 ff ff ff                  	jmp 0xffffff90
0x8048470:   ff 25 24 a0 04 08               	jmp dword [ 0x804a024 ]
0x8048476:   68 30 00 00 00                  	push 0x30
0x804847b:   e9 80 ff ff ff                  	jmp 0xffffff80
0x8048480:   ff 25 28 a0 04 08               	jmp dword [ 0x804a028 ]
0x8048486:   68 38 00 00 00                  	push 0x38
0x804848b:   e9 70 ff ff ff                  	jmp 0xffffff70
; section: .plt.got
; function: function_8048490 at 0x8048490 -- 0x8048497
0x8048490:   ff 25 fc 9f 04 08               	jmp dword [ 0x8049ffc <unknown_8049ffc> ]
0x8048496:   66 90                           	xchg ax, ax
; section: .text
; function: _start at 0x80484a0 -- 0x80484cf
0x80484a0:   31 ed                           	xor ebp, ebp
0x80484a2:   5e                              	pop esi
0x80484a3:   89 e1                           	mov ecx, esp
0x80484a5:   83 e4 f0                        	and esp, 0xfffffff0
0x80484a8:   50                              	push eax
0x80484a9:   54                              	push esp
0x80484aa:   52                              	push edx
0x80484ab:   68 20 88 04 08                  	push 0x8048820
0x80484b0:   68 c0 87 04 08                  	push 0x80487c0
0x80484b5:   51                              	push ecx
0x80484b6:   56                              	push esi
0x80484b7:   68 9b 85 04 08                  	push 0x804859b
0x80484bc:   e8 af ff ff ff                  	call 0x8048470 <__libc_start_main>
0x80484c1:   f4                              	hlt
0x80484c2:   66 90                           	xchg ax, ax
0x80484c4:   66 90                           	xchg ax, ax
0x80484c6:   66 90                           	xchg ax, ax
0x80484c8:   66 90                           	xchg ax, ax
0x80484ca:   66 90                           	xchg ax, ax
0x80484cc:   66 90                           	xchg ax, ax
0x80484ce:   66 90                           	xchg ax, ax
; function: __x86.get_pc_thunk.bx at 0x80484d0 -- 0x80484df
0x80484d0:   8b 1c 24                        	mov ebx, dword [ esp ]
0x80484d3:   c3                              	ret
0x80484d4:   66 90                           	xchg ax, ax
0x80484d6:   66 90                           	xchg ax, ax
0x80484d8:   66 90                           	xchg ax, ax
0x80484da:   66 90                           	xchg ax, ax
0x80484dc:   66 90                           	xchg ax, ax
0x80484de:   66 90                           	xchg ax, ax
; function: deregister_tm_clones at 0x80484e0 -- 0x804850f
0x80484e0:   b8 37 a0 04 08                  	mov eax, 0x804a037
0x80484e5:   2d 34 a0 04 08                  	sub eax, 0x804a034
0x80484ea:   83 f8 06                        	cmp eax, 0x6
0x80484ed:   76 1a                           	jbe 0x8048509 <deregister_tm_clones+0x29>
0x80484ef:   b8 00 00 00 00                  	mov eax, 0x0
0x80484f4:   85 c0                           	test eax, eax
0x80484f6:   74 11                           	jz 0x8048509 <deregister_tm_clones+0x29>
0x80484f8:   55                              	push ebp
0x80484f9:   89 e5                           	mov ebp, esp
0x80484fb:   83 ec 14                        	sub esp, 0x14
0x80484fe:   68 34 a0 04 08                  	push 0x804a034
0x8048503:   ff d0                           	call eax
0x8048505:   83 c4 10                        	add esp, 0x10
0x8048508:   c9                              	leave
0x8048509:   f3 c3                           	rep ret
0x804850b:   90                              	nop
0x804850c:   8d 74 26 00                     	lea esi, dword [ esi + 0x0 ]
; function: register_tm_clones at 0x8048510 -- 0x804854f
0x8048510:   b8 34 a0 04 08                  	mov eax, 0x804a034
0x8048515:   2d 34 a0 04 08                  	sub eax, 0x804a034
0x804851a:   c1 f8 02                        	sar eax, 0x2
0x804851d:   89 c2                           	mov edx, eax
0x804851f:   c1 ea 1f                        	shr edx, 0x1f
0x8048522:   01 d0                           	add eax, edx
0x8048524:   d1 f8                           	sar eax, 1
0x8048526:   74 1b                           	jz 0x8048543 <register_tm_clones+0x33>
0x8048528:   ba 00 00 00 00                  	mov edx, 0x0
0x804852d:   85 d2                           	test edx, edx
0x804852f:   74 12                           	jz 0x8048543 <register_tm_clones+0x33>
0x8048531:   55                              	push ebp
0x8048532:   89 e5                           	mov ebp, esp
0x8048534:   83 ec 10                        	sub esp, 0x10
0x8048537:   50                              	push eax
0x8048538:   68 34 a0 04 08                  	push 0x804a034
0x804853d:   ff d2                           	call edx
0x804853f:   83 c4 10                        	add esp, 0x10
0x8048542:   c9                              	leave
0x8048543:   f3 c3                           	rep ret
0x8048545:   8d 74 26 00                     	lea esi, dword [ esi + 0x0 ]
0x8048549:   8d bc 27 00 00 00 00            	lea edi, dword [ edi + 0x0 ]
; function: __do_global_dtors_aux at 0x8048550 -- 0x804856f
0x8048550:   80 3d 38 a0 04 08 00            	cmp byte [ 0x804a038 ], 0x0
0x8048557:   75 13                           	jnz 0x804856c <__do_global_dtors_aux+0x1c>
0x8048559:   55                              	push ebp
0x804855a:   89 e5                           	mov ebp, esp
0x804855c:   83 ec 08                        	sub esp, 0x8
0x804855f:   e8 7c ff ff ff                  	call 0x80484e0 <deregister_tm_clones>
0x8048564:   c6 05 38 a0 04 08 01            	mov byte [ 0x804a038 ], 0x1
0x804856b:   c9                              	leave
0x804856c:   f3 c3                           	rep ret
0x804856e:   66 90                           	xchg ax, ax
; function: frame_dummy at 0x8048570 -- 0x804859a
0x8048570:   b8 10 9f 04 08                  	mov eax, 0x8049f10
0x8048575:   8b 10                           	mov edx, dword [ eax ]
0x8048577:   85 d2                           	test edx, edx
0x8048579:   75 05                           	jnz 0x8048580 <frame_dummy+0x10>
0x804857b:   eb 93                           	jmp 0x8048510 <register_tm_clones>
0x804857d:   8d 76 00                        	lea esi, dword [ esi + 0x0 ]
0x8048580:   ba 00 00 00 00                  	mov edx, 0x0
0x8048585:   85 d2                           	test edx, edx
0x8048587:   74 f2                           	jz 0x804857b <frame_dummy+0xb>
0x8048589:   55                              	push ebp
0x804858a:   89 e5                           	mov ebp, esp
0x804858c:   83 ec 14                        	sub esp, 0x14
0x804858f:   50                              	push eax
0x8048590:   ff d2                           	call edx
0x8048592:   83 c4 10                        	add esp, 0x10
0x8048595:   c9                              	leave
0x8048596:   e9 75 ff ff ff                  	jmp 0x8048510 <register_tm_clones>
; function: main at 0x804859b -- 0x80487bf
0x804859b:   8d 4c 24 04                     	lea ecx, dword [ esp + 0x4 ]
0x804859f:   83 e4 f0                        	and esp, 0xfffffff0
0x80485a2:   ff 71 fc                        	push dword [ ecx + 0xfffffffc ]
0x80485a5:   55                              	push ebp
0x80485a6:   89 e5                           	mov ebp, esp
0x80485a8:   57                              	push edi
0x80485a9:   51                              	push ecx
0x80485aa:   83 c4 80                        	add esp, 0xffffff80
0x80485ad:   65                              	
0x80485ae:   a1 14 00 00 00                  	mov eax, dword [ 0x14 ]
0x80485b3:   89 45 f4                        	mov dword [ ebp + 0xfffffff4 ], eax
0x80485b6:   31 c0                           	xor eax, eax
0x80485b8:   8d 45 90                        	lea eax, dword [ ebp + 0xffffff90 ]
0x80485bb:   89 85 7c ff ff ff               	mov dword [ ebp + 0xffffff7c ], eax
0x80485c1:   a1 34 a0 04 08                  	mov eax, dword [ 0x804a034 ]
0x80485c6:   83 ec 08                        	sub esp, 0x8
0x80485c9:   6a 00                           	push 0x0
0x80485cb:   50                              	push eax
0x80485cc:   e8 3f fe ff ff                  	call 0x8048410 <setbuf>
0x80485d1:   83 c4 10                        	add esp, 0x10
0x80485d4:   8d 45 90                        	lea eax, dword [ ebp + 0xffffff90 ]
0x80485d7:   c7 00 2f 62 69 6e               	mov dword [ eax ], 0x6e69622f
0x80485dd:   c7 40 04 2f 6c 73 20            	mov dword [ eax + 0x4 ], 0x20736c2f
0x80485e4:   c6 40 08 00                     	mov byte [ eax + 0x8 ], 0x0
0x80485e8:   83 ec 0c                        	sub esp, 0xc
0x80485eb:   68 40 88 04 08                  	push 0x8048840 ; "============================================================"
0x80485f0:   e8 4b fe ff ff                  	call 0x8048440 <puts>
0x80485f5:   83 c4 10                        	add esp, 0x10
0x80485f8:   83 ec 0c                        	sub esp, 0xc
0x80485fb:   68 80 88 04 08                  	push 0x8048880 ; "EL-ESS -- a drop-in replacement for ls"
0x8048600:   e8 3b fe ff ff                  	call 0x8048440 <puts>
0x8048605:   83 c4 10                        	add esp, 0x10
0x8048608:   83 ec 0c                        	sub esp, 0xc
0x804860b:   68 40 88 04 08                  	push 0x8048840 ; "============================================================"
0x8048610:   e8 2b fe ff ff                  	call 0x8048440 <puts>
0x8048615:   83 c4 10                        	add esp, 0x10
0x8048618:   83 ec 0c                        	sub esp, 0xc
0x804861b:   68 a7 88 04 08                  	push 0x80488a7 ; "Enter path: "
0x8048620:   e8 fb fd ff ff                  	call 0x8048420 <printf>
0x8048625:   83 c4 10                        	add esp, 0x10
0x8048628:   83 ec 08                        	sub esp, 0x8
0x804862b:   8d 45 80                        	lea eax, dword [ ebp + 0xffffff80 ]
0x804862e:   50                              	push eax
0x804862f:   68 b4 88 04 08                  	push 0x80488b4 ; "%16s"
0x8048634:   e8 47 fe ff ff                  	call 0x8048480 <scanf>
0x8048639:   83 c4 10                        	add esp, 0x10
0x804863c:   83 ec 0c                        	sub esp, 0xc
0x804863f:   8d 45 90                        	lea eax, dword [ ebp + 0xffffff90 ]
0x8048642:   50                              	push eax
0x8048643:   e8 18 fe ff ff                  	call 0x8048460 <strlen>
0x8048648:   83 c4 10                        	add esp, 0x10
0x804864b:   01 85 7c ff ff ff               	add dword [ ebp + 0xffffff7c ], eax
0x8048651:   c7 85 78 ff ff ff 00 00 00 00   	mov dword [ ebp + 0xffffff78 ], 0x0
0x804865b:   e9 c8 00 00 00                  	jmp 0x8048728 <main+0x18d>
0x8048660:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x8048663:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x8048669:   01 d0                           	add eax, edx
0x804866b:   0f b6 00                        	movzx eax, byte [ eax ]
0x804866e:   3c 27                           	cmp al, 0x27
0x8048670:   74 7e                           	jz 0x80486f0 <main+0x155>
0x8048672:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x8048675:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x804867b:   01 d0                           	add eax, edx
0x804867d:   0f b6 00                        	movzx eax, byte [ eax ]
0x8048680:   3c 22                           	cmp al, 0x22
0x8048682:   74 6c                           	jz 0x80486f0 <main+0x155>
0x8048684:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x8048687:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x804868d:   01 d0                           	add eax, edx
0x804868f:   0f b6 00                        	movzx eax, byte [ eax ]
0x8048692:   3c 60                           	cmp al, 0x60
0x8048694:   74 5a                           	jz 0x80486f0 <main+0x155>
0x8048696:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x8048699:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x804869f:   01 d0                           	add eax, edx
0x80486a1:   0f b6 00                        	movzx eax, byte [ eax ]
0x80486a4:   3c 24                           	cmp al, 0x24
0x80486a6:   74 48                           	jz 0x80486f0 <main+0x155>
0x80486a8:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x80486ab:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x80486b1:   01 d0                           	add eax, edx
0x80486b3:   0f b6 00                        	movzx eax, byte [ eax ]
0x80486b6:   3c 3b                           	cmp al, 0x3b
0x80486b8:   74 36                           	jz 0x80486f0 <main+0x155>
0x80486ba:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x80486bd:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x80486c3:   01 d0                           	add eax, edx
0x80486c5:   0f b6 00                        	movzx eax, byte [ eax ]
0x80486c8:   3c 7c                           	cmp al, 0x7c
0x80486ca:   74 24                           	jz 0x80486f0 <main+0x155>
0x80486cc:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x80486cf:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x80486d5:   01 d0                           	add eax, edx
0x80486d7:   0f b6 00                        	movzx eax, byte [ eax ]
0x80486da:   3c 3c                           	cmp al, 0x3c
0x80486dc:   74 12                           	jz 0x80486f0 <main+0x155>
0x80486de:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x80486e1:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x80486e7:   01 d0                           	add eax, edx
0x80486e9:   0f b6 00                        	movzx eax, byte [ eax ]
0x80486ec:   3c 3e                           	cmp al, 0x3e
0x80486ee:   75 12                           	jnz 0x8048702 <main+0x167>
0x80486f0:   8b 85 7c ff ff ff               	mov eax, dword [ ebp + 0xffffff7c ]
0x80486f6:   8d 50 01                        	lea edx, dword [ eax + 0x1 ]
0x80486f9:   89 95 7c ff ff ff               	mov dword [ ebp + 0xffffff7c ], edx
0x80486ff:   c6 00 5c                        	mov byte [ eax ], 0x5c
0x8048702:   8b 85 7c ff ff ff               	mov eax, dword [ ebp + 0xffffff7c ]
0x8048708:   8d 50 01                        	lea edx, dword [ eax + 0x1 ]
0x804870b:   89 95 7c ff ff ff               	mov dword [ ebp + 0xffffff7c ], edx
0x8048711:   8d 4d 80                        	lea ecx, dword [ ebp + 0xffffff80 ]
0x8048714:   8b 95 78 ff ff ff               	mov edx, dword [ ebp + 0xffffff78 ]
0x804871a:   01 ca                           	add edx, ecx
0x804871c:   0f b6 12                        	movzx edx, byte [ edx ]
0x804871f:   88 10                           	mov byte [ eax ], dl
0x8048721:   83 85 78 ff ff ff 01            	add dword [ ebp + 0xffffff78 ], 0x1
0x8048728:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x804872e:   83 f8 0f                        	cmp eax, 0xf
0x8048731:   77 16                           	ja 0x8048749 <main+0x1ae>
0x8048733:   8d 55 80                        	lea edx, dword [ ebp + 0xffffff80 ]
0x8048736:   8b 85 78 ff ff ff               	mov eax, dword [ ebp + 0xffffff78 ]
0x804873c:   01 d0                           	add eax, edx
0x804873e:   0f b6 00                        	movzx eax, byte [ eax ]
0x8048741:   84 c0                           	test al, al
0x8048743:   0f 85 17 ff ff ff               	jnz 0x8048660 <main+0xc5>
0x8048749:   8b 85 7c ff ff ff               	mov eax, dword [ ebp + 0xffffff7c ]
0x804874f:   c6 00 00                        	mov byte [ eax ], 0x0
0x8048752:   8d 45 90                        	lea eax, dword [ ebp + 0xffffff90 ]
0x8048755:   b9 ff ff ff ff                  	mov ecx, 0xffffffff
0x804875a:   89 c2                           	mov edx, eax
0x804875c:   b8 00 00 00 00                  	mov eax, 0x0
0x8048761:   89 d7                           	mov edi, edx
0x8048763:   f2 ae                           	repne scasb
0x8048765:   89 c8                           	mov eax, ecx
0x8048767:   f7 d0                           	not eax
0x8048769:   8d 50 ff                        	lea edx, dword [ eax + 0xffffffff ]
0x804876c:   8d 45 90                        	lea eax, dword [ ebp + 0xffffff90 ]
0x804876f:   01 d0                           	add eax, edx
0x8048771:   c7 00 20 32 3e 20               	mov dword [ eax ], 0x203e3220
0x8048777:   c7 40 04 2f 64 65 76            	mov dword [ eax + 0x4 ], 0x7665642f
0x804877e:   c7 40 08 2f 6e 75 6c            	mov dword [ eax + 0x8 ], 0x6c756e2f
0x8048785:   66 c7 40 0c 6c 00               	mov word [ eax + 0xc ], 0x6c
0x804878b:   83 ec 0c                        	sub esp, 0xc
0x804878e:   8d 45 90                        	lea eax, dword [ ebp + 0xffffff90 ]
0x8048791:   50                              	push eax
0x8048792:   e8 b9 fc ff ff                  	call 0x8048450 <system>
0x8048797:   83 c4 10                        	add esp, 0x10
0x804879a:   b8 00 00 00 00                  	mov eax, 0x0
0x804879f:   8b 7d f4                        	mov edi, dword [ ebp + 0xfffffff4 ]
0x80487a2:   65                              	
0x80487a3:   33 3d 14 00 00 00               	xor edi, dword [ 0x14 ]
0x80487a9:   74 05                           	jz 0x80487b0 <main+0x215>
0x80487ab:   e8 80 fc ff ff                  	call 0x8048430 <__stack_chk_fail>
0x80487b0:   8d 65 f8                        	lea esp, dword [ ebp + 0xfffffff8 ]
0x80487b3:   59                              	pop ecx
0x80487b4:   5f                              	pop edi
0x80487b5:   5d                              	pop ebp
0x80487b6:   8d 61 fc                        	lea esp, dword [ ecx + 0xfffffffc ]
0x80487b9:   c3                              	ret
0x80487ba:   66 90                           	xchg ax, ax
0x80487bc:   66 90                           	xchg ax, ax
0x80487be:   66 90                           	xchg ax, ax
; function: __libc_csu_init at 0x80487c0 -- 0x804881c
0x80487c0:   55                              	push ebp
0x80487c1:   57                              	push edi
0x80487c2:   56                              	push esi
0x80487c3:   53                              	push ebx
0x80487c4:   e8 07 fd ff ff                  	call 0x80484d0 <__x86.get_pc_thunk.bx>
0x80487c9:   81 c3 37 18 00 00               	add ebx, 0x1837
0x80487cf:   83 ec 0c                        	sub esp, 0xc
0x80487d2:   8b 6c 24 20                     	mov ebp, dword [ esp + 0x20 ]
0x80487d6:   8d b3 0c ff ff ff               	lea esi, dword [ ebx + 0xffffff0c ]
0x80487dc:   e8 fb fb ff ff                  	call 0x80483dc <_init>
0x80487e1:   8d 83 08 ff ff ff               	lea eax, dword [ ebx + 0xffffff08 ]
0x80487e7:   29 c6                           	sub esi, eax
0x80487e9:   c1 fe 02                        	sar esi, 0x2
0x80487ec:   85 f6                           	test esi, esi
0x80487ee:   74 25                           	jz 0x8048815 <__libc_csu_init+0x55>
0x80487f0:   31 ff                           	xor edi, edi
0x80487f2:   8d b6 00 00 00 00               	lea esi, dword [ esi + 0x0 ]
0x80487f8:   83 ec 04                        	sub esp, 0x4
0x80487fb:   ff 74 24 2c                     	push dword [ esp + 0x2c ]
0x80487ff:   ff 74 24 2c                     	push dword [ esp + 0x2c ]
0x8048803:   55                              	push ebp
0x8048804:   ff 94 bb 08 ff ff ff            	call dword [ ebx + edi * 0x2 + 0xffffff08 ]
0x804880b:   83 c7 01                        	add edi, 0x1
0x804880e:   83 c4 10                        	add esp, 0x10
0x8048811:   39 f7                           	cmp edi, esi
0x8048813:   75 e3                           	jnz 0x80487f8 <__libc_csu_init+0x38>
0x8048815:   83 c4 0c                        	add esp, 0xc
0x8048818:   5b                              	pop ebx
0x8048819:   5e                              	pop esi
0x804881a:   5f                              	pop edi
0x804881b:   5d                              	pop ebp
0x804881c:   c3                              	ret
; function: function_804881d at 0x804881d -- 0x804881f
0x804881d:   8d 76 00                        	lea esi, dword [ esi + 0x0 ]
; function: __libc_csu_fini at 0x8048820 -- 0x8048821
0x8048820:   f3 c3                           	rep ret
; section: .fini
; function: _fini at 0x8048824 -- 0x8048837
0x8048824:   53                              	push ebx
0x8048825:   83 ec 08                        	sub esp, 0x8
0x8048828:   e8 a3 fc ff ff                  	call 0x80484d0 <__x86.get_pc_thunk.bx>
0x804882d:   81 c3 d3 17 00 00               	add ebx, 0x17d3
0x8048833:   83 c4 08                        	add esp, 0x8
0x8048836:   5b                              	pop ebx
0x8048837:   c3                              	ret

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00                                           |.2.             |
; section: .gnu.hash
0x80481ac:   02 00 00 00 0a 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 23 00 20 0a 00 00 00  0b 00 00 00 29 1d 8c 1c   |.#. ........)...|
0x80481cc:   ad 4b e3 c0                                        |.K..            |
; section: .dynsym
0x80481d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481e0:   5b 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |[...............|
0x80481f0:   3f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |?...............|
0x8048200:   2e 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048210:   29 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |)...............|
0x8048220:   54 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |T...............|
0x8048230:   74 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |t........... ...|
0x8048240:   46 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |F...............|
0x8048250:   62 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |b...............|
0x8048260:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048270:   4d 00 00 00 34 a0 04 08  04 00 00 00 11 00 1a 00   |M...4...........|
0x8048280:   0b 00 00 00 3c 88 04 08  04 00 00 00 11 00 10 00   |....<...........|
; section: .dynstr
0x8048290:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x80482a0:   74 64 69 6e 5f 75 73 65  64 00 5f 5f 69 73 6f 63   |tdin_used.__isoc|
0x80482b0:   39 39 5f 73 63 61 6e 66  00 70 75 74 73 00 5f 5f   |99_scanf.puts.__|
0x80482c0:   73 74 61 63 6b 5f 63 68  6b 5f 66 61 69 6c 00 70   |stack_chk_fail.p|
0x80482d0:   72 69 6e 74 66 00 73 74  72 6c 65 6e 00 73 74 64   |rintf.strlen.std|
0x80482e0:   6f 75 74 00 73 79 73 74  65 6d 00 73 65 74 62 75   |out.system.setbu|
0x80482f0:   66 00 5f 5f 6c 69 62 63  5f 73 74 61 72 74 5f 6d   |f.__libc_start_m|
0x8048300:   61 69 6e 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |ain.__gmon_start|
0x8048310:   5f 5f 00 47 4c 49 42 43  5f 32 2e 37 00 47 4c 49   |__.GLIBC_2.7.GLI|
0x8048320:   42 43 5f 32 2e 34 00 47  4c 49 42 43 5f 32 2e 30   |BC_2.4.GLIBC_2.0|
0x8048330:   00                                                 |.               |
; section: .gnu.version
0x8048332:   00 00 02 00 02 00 03 00  02 00 02 00 00 00 02 00   |................|
0x8048342:   02 00 04 00 02 00 01 00                            |........        |
; section: .gnu.version_r
0x804834c:   01 00 03 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804835c:   17 69 69 0d 00 00 04 00  83 00 00 00 10 00 00 00   |.ii.............|
0x804836c:   14 69 69 0d 00 00 03 00  8d 00 00 00 10 00 00 00   |.ii.............|
0x804837c:   10 69 69 0d 00 00 02 00  97 00 00 00 00 00 00 00   |.ii.............|
; section: .rel.dyn
0x804838c:   fc 9f 04 08 06 06 00 00  34 a0 04 08 05 0a 00 00   |........4.......|
; section: .rel.plt
0x804839c:   0c a0 04 08 07 01 00 00  10 a0 04 08 07 02 00 00   |................|
0x80483ac:   14 a0 04 08 07 03 00 00  18 a0 04 08 07 04 00 00   |................|
0x80483bc:   1c a0 04 08 07 05 00 00  20 a0 04 08 07 07 00 00   |........ .......|
0x80483cc:   24 a0 04 08 07 08 00 00  28 a0 04 08 07 09 00 00   |$.......(.......|
; section: .rodata
0x8048838:   03 00 00 00 01 00 02 00                            |........        |
0x8048840:   3d 3d 3d 3d 3d 3d 3d 3d  3d 3d 3d 3d 3d 3d 3d 3d   |================|   "============================================================"
0x8048850:   3d 3d 3d 3d 3d 3d 3d 3d  3d 3d 3d 3d 3d 3d 3d 3d   |================|
0x8048860:   3d 3d 3d 3d 3d 3d 3d 3d  3d 3d 3d 3d 3d 3d 3d 3d   |================|
0x8048870:   3d 3d 3d 3d 3d 3d 3d 3d  3d 3d 3d 3d 00            |============.   |
0x804887d:   00 00 00                                           |...             |
0x8048880:   45 4c 2d 45 53 53 20 2d  2d 20 61 20 64 72 6f 70   |EL-ESS -- a drop|   "EL-ESS -- a drop-in replacement for ls"
0x8048890:   2d 69 6e 20 72 65 70 6c  61 63 65 6d 65 6e 74 20   |-in replacement |
0x80488a0:   66 6f 72 20 6c 73 00                               |for ls.         |
0x80488a7:   45 6e 74 65 72 20 70 61  74 68 3a 20 00            |Enter path: .   |   "Enter path: "
0x80488b4:   25 31 36 73 00                                     |%16s.           |   "%16s"
; section: .eh_frame_hdr
0x80488bc:   01 1b 03 3b 28 00 00 00  04 00 00 00 44 fb ff ff   |...;(.......D...|
0x80488cc:   44 00 00 00 df fc ff ff  68 00 00 00 04 ff ff ff   |D.......h.......|
0x80488dc:   a0 00 00 00 64 ff ff ff  ec 00 00 00               |....d.......    |
; section: .eh_frame
0x80488e8:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x80488f8:   1b 0c 04 04 88 01 00 00  20 00 00 00 1c 00 00 00   |........ .......|
0x8048908:   f8 fa ff ff 90 00 00 00  00 0e 08 46 0e 0c 4a 0f   |...........F..J.|
0x8048918:   0b 74 04 78 00 3f 1a 3b  2a 32 24 22 34 00 00 00   |.t.x.?.;*2$"4...|
0x8048928:   40 00 00 00 6f fc ff ff  1f 02 00 00 00 44 0c 01   |@...o........D..|
0x8048938:   00 47 10 05 02 75 00 44  0f 03 75 78 06 10 07 02   |.G...u.D..ux....|
0x8048948:   75 7c 03 0a 02 c1 0c 01  00 41 c7 41 c5 43 0c 04   |u|.......A.A.C..|
0x8048958:   04 00 00 00 48 00 00 00  78 00 00 00 5c fe ff ff   |....H...x...\...|
0x8048968:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x8048978:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 44   |....A....N. i.$D|
0x8048988:   0e 28 44 0e 2c 41 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,A.0M. G..A.|
0x8048998:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x80489a8:   10 00 00 00 c4 00 00 00  70 fe ff ff 02 00 00 00   |........p.......|
0x80489b8:   00 00 00 00 00 00 00 00                            |........        |
; section: .init_array
0x8049f08:   70 85 04 08                                        |p...            |
; section: .fini_array
0x8049f0c:   50 85 04 08                                        |P...            |
; section: .jcr
0x8049f10:   00 00 00 00                                        |....            |
; section: .dynamic
0x8049f14:   01 00 00 00 01 00 00 00  0c 00 00 00 dc 83 04 08   |................|
0x8049f24:   0d 00 00 00 24 88 04 08  19 00 00 00 08 9f 04 08   |....$...........|
0x8049f34:   1b 00 00 00 04 00 00 00  1a 00 00 00 0c 9f 04 08   |................|
0x8049f44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x8049f54:   05 00 00 00 90 82 04 08  06 00 00 00 d0 81 04 08   |................|
0x8049f64:   0a 00 00 00 a1 00 00 00  0b 00 00 00 10 00 00 00   |................|
0x8049f74:   15 00 00 00 00 00 00 00  03 00 00 00 00 a0 04 08   |................|
0x8049f84:   02 00 00 00 40 00 00 00  14 00 00 00 11 00 00 00   |....@...........|
0x8049f94:   17 00 00 00 9c 83 04 08  11 00 00 00 8c 83 04 08   |................|
0x8049fa4:   12 00 00 00 10 00 00 00  13 00 00 00 08 00 00 00   |................|
0x8049fb4:   fe ff ff 6f 4c 83 04 08  ff ff ff 6f 01 00 00 00   |...oL......o....|
0x8049fc4:   f0 ff ff 6f 32 83 04 08  00 00 00 00 00 00 00 00   |...o2...........|
0x8049fd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049fe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049ff4:   00 00 00 00 00 00 00 00                            |........        |
; section: .got
0x8049ffc:   00 00 00 00                                        |....            |
; section: .got.plt
0x804a000:   14 9f 04 08 00 00 00 00  00 00 00 00 16 84 04 08   |................|
0x804a010:   26 84 04 08 36 84 04 08  46 84 04 08 56 84 04 08   |&...6...F...V...|
0x804a020:   66 84 04 08 76 84 04 08  86 84 04 08               |f...v.......    |
; section: .data
0x804a02c:   00 00 00 00 00 00 00 00                            |........        |
