;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2017 Retargetable Decompiler <info@retdec.com>
;;
;; Decompiler release: v2.2.1 (2016-09-07)
;; Decompilation date: 2017-07-02 14:47:51
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x8048488 -- 0x80484aa
0x8048488:   53                              	push ebx
0x8048489:   83 ec 08                        	sub esp, 0x8
0x804848c:   e8 1f 01 00 00                  	call 0x80485b0 <__x86.get_pc_thunk.bx>
0x8048491:   81 c3 6f 1b 00 00               	add ebx, 0x1b6f
0x8048497:   8b 83 fc ff ff ff               	mov eax, dword [ ebx + 0xfffffffc ]
0x804849d:   85 c0                           	test eax, eax
0x804849f:   74 05                           	jz 0x80484a6 <_init+0x1e>
0x80484a1:   e8 ca 00 00 00                  	call 0x8048570 <function_8048570>
0x80484a6:   83 c4 08                        	add esp, 0x8
0x80484a9:   5b                              	pop ebx
0x80484aa:   c3                              	ret
; section: .plt
; function: function_80484b0 at 0x80484b0 -- 0x804856f
0x80484b0:   ff 35 04 a0 04 08               	push dword [ 0x804a004 ]
0x80484b6:   ff 25 08 a0 04 08               	jmp dword [ 0x804a008 ]
0x80484bc:   00 00                           	add byte [ eax ], al
0x80484be:   00 00                           	add byte [ eax ], al
0x80484c0:   ff 25 0c a0 04 08               	jmp dword [ 0x804a00c ]
0x80484c6:   68 00 00 00 00                  	push 0x0
0x80484cb:   e9 e0 ff ff ff                  	jmp 0xffffffe0
0x80484d0:   ff 25 10 a0 04 08               	jmp dword [ 0x804a010 ]
0x80484d6:   68 08 00 00 00                  	push 0x8
0x80484db:   e9 d0 ff ff ff                  	jmp 0xffffffd0
0x80484e0:   ff 25 14 a0 04 08               	jmp dword [ 0x804a014 ]
0x80484e6:   68 10 00 00 00                  	push 0x10
0x80484eb:   e9 c0 ff ff ff                  	jmp 0xffffffc0
0x80484f0:   ff 25 18 a0 04 08               	jmp dword [ 0x804a018 ]
0x80484f6:   68 18 00 00 00                  	push 0x18
0x80484fb:   e9 b0 ff ff ff                  	jmp 0xffffffb0
0x8048500:   ff 25 1c a0 04 08               	jmp dword [ 0x804a01c ]
0x8048506:   68 20 00 00 00                  	push 0x20
0x804850b:   e9 a0 ff ff ff                  	jmp 0xffffffa0
0x8048510:   ff 25 20 a0 04 08               	jmp dword [ 0x804a020 ]
0x8048516:   68 28 00 00 00                  	push 0x28
0x804851b:   e9 90 ff ff ff                  	jmp 0xffffff90
0x8048520:   ff 25 24 a0 04 08               	jmp dword [ 0x804a024 ]
0x8048526:   68 30 00 00 00                  	push 0x30
0x804852b:   e9 80 ff ff ff                  	jmp 0xffffff80
0x8048530:   ff 25 28 a0 04 08               	jmp dword [ 0x804a028 ]
0x8048536:   68 38 00 00 00                  	push 0x38
0x804853b:   e9 70 ff ff ff                  	jmp 0xffffff70
0x8048540:   ff 25 2c a0 04 08               	jmp dword [ 0x804a02c ]
0x8048546:   68 40 00 00 00                  	push 0x40
0x804854b:   e9 60 ff ff ff                  	jmp 0xffffff60
0x8048550:   ff 25 30 a0 04 08               	jmp dword [ 0x804a030 ]
0x8048556:   68 48 00 00 00                  	push 0x48
0x804855b:   e9 50 ff ff ff                  	jmp 0xffffff50
0x8048560:   ff 25 34 a0 04 08               	jmp dword [ 0x804a034 ]
0x8048566:   68 50 00 00 00                  	push 0x50
0x804856b:   e9 40 ff ff ff                  	jmp 0xffffff40
; section: .plt.got
; function: function_8048570 at 0x8048570 -- 0x8048577
0x8048570:   ff 25 fc 9f 04 08               	jmp dword [ 0x8049ffc <unknown_8049ffc> ]
0x8048576:   66 90                           	xchg ax, ax
; section: .text
; function: _start at 0x8048580 -- 0x80485af
0x8048580:   31 ed                           	xor ebp, ebp
0x8048582:   5e                              	pop esi
0x8048583:   89 e1                           	mov ecx, esp
0x8048585:   83 e4 f0                        	and esp, 0xfffffff0
0x8048588:   50                              	push eax
0x8048589:   54                              	push esp
0x804858a:   52                              	push edx
0x804858b:   68 e0 88 04 08                  	push 0x80488e0
0x8048590:   68 80 88 04 08                  	push 0x8048880
0x8048595:   51                              	push ecx
0x8048596:   56                              	push esi
0x8048597:   68 7b 86 04 08                  	push 0x804867b
0x804859c:   e8 8f ff ff ff                  	call 0x8048530 <__libc_start_main>
0x80485a1:   f4                              	hlt
0x80485a2:   66 90                           	xchg ax, ax
0x80485a4:   66 90                           	xchg ax, ax
0x80485a6:   66 90                           	xchg ax, ax
0x80485a8:   66 90                           	xchg ax, ax
0x80485aa:   66 90                           	xchg ax, ax
0x80485ac:   66 90                           	xchg ax, ax
0x80485ae:   66 90                           	xchg ax, ax
; function: __x86.get_pc_thunk.bx at 0x80485b0 -- 0x80485bf
0x80485b0:   8b 1c 24                        	mov ebx, dword [ esp ]
0x80485b3:   c3                              	ret
0x80485b4:   66 90                           	xchg ax, ax
0x80485b6:   66 90                           	xchg ax, ax
0x80485b8:   66 90                           	xchg ax, ax
0x80485ba:   66 90                           	xchg ax, ax
0x80485bc:   66 90                           	xchg ax, ax
0x80485be:   66 90                           	xchg ax, ax
; function: deregister_tm_clones at 0x80485c0 -- 0x80485ef
0x80485c0:   b8 43 a0 04 08                  	mov eax, 0x804a043
0x80485c5:   2d 40 a0 04 08                  	sub eax, 0x804a040
0x80485ca:   83 f8 06                        	cmp eax, 0x6
0x80485cd:   76 1a                           	jbe 0x80485e9 <deregister_tm_clones+0x29>
0x80485cf:   b8 00 00 00 00                  	mov eax, 0x0
0x80485d4:   85 c0                           	test eax, eax
0x80485d6:   74 11                           	jz 0x80485e9 <deregister_tm_clones+0x29>
0x80485d8:   55                              	push ebp
0x80485d9:   89 e5                           	mov ebp, esp
0x80485db:   83 ec 14                        	sub esp, 0x14
0x80485de:   68 40 a0 04 08                  	push 0x804a040
0x80485e3:   ff d0                           	call eax
0x80485e5:   83 c4 10                        	add esp, 0x10
0x80485e8:   c9                              	leave
0x80485e9:   f3 c3                           	rep ret
0x80485eb:   90                              	nop
0x80485ec:   8d 74 26 00                     	lea esi, dword [ esi + 0x0 ]
; function: register_tm_clones at 0x80485f0 -- 0x804862f
0x80485f0:   b8 40 a0 04 08                  	mov eax, 0x804a040
0x80485f5:   2d 40 a0 04 08                  	sub eax, 0x804a040
0x80485fa:   c1 f8 02                        	sar eax, 0x2
0x80485fd:   89 c2                           	mov edx, eax
0x80485ff:   c1 ea 1f                        	shr edx, 0x1f
0x8048602:   01 d0                           	add eax, edx
0x8048604:   d1 f8                           	sar eax, 1
0x8048606:   74 1b                           	jz 0x8048623 <register_tm_clones+0x33>
0x8048608:   ba 00 00 00 00                  	mov edx, 0x0
0x804860d:   85 d2                           	test edx, edx
0x804860f:   74 12                           	jz 0x8048623 <register_tm_clones+0x33>
0x8048611:   55                              	push ebp
0x8048612:   89 e5                           	mov ebp, esp
0x8048614:   83 ec 10                        	sub esp, 0x10
0x8048617:   50                              	push eax
0x8048618:   68 40 a0 04 08                  	push 0x804a040
0x804861d:   ff d2                           	call edx
0x804861f:   83 c4 10                        	add esp, 0x10
0x8048622:   c9                              	leave
0x8048623:   f3 c3                           	rep ret
0x8048625:   8d 74 26 00                     	lea esi, dword [ esi + 0x0 ]
0x8048629:   8d bc 27 00 00 00 00            	lea edi, dword [ edi + 0x0 ]
; function: __do_global_dtors_aux at 0x8048630 -- 0x804864f
0x8048630:   80 3d 48 a0 04 08 00            	cmp byte [ 0x804a048 ], 0x0
0x8048637:   75 13                           	jnz 0x804864c <__do_global_dtors_aux+0x1c>
0x8048639:   55                              	push ebp
0x804863a:   89 e5                           	mov ebp, esp
0x804863c:   83 ec 08                        	sub esp, 0x8
0x804863f:   e8 7c ff ff ff                  	call 0x80485c0 <deregister_tm_clones>
0x8048644:   c6 05 48 a0 04 08 01            	mov byte [ 0x804a048 ], 0x1
0x804864b:   c9                              	leave
0x804864c:   f3 c3                           	rep ret
0x804864e:   66 90                           	xchg ax, ax
; function: frame_dummy at 0x8048650 -- 0x804867a
0x8048650:   b8 10 9f 04 08                  	mov eax, 0x8049f10
0x8048655:   8b 10                           	mov edx, dword [ eax ]
0x8048657:   85 d2                           	test edx, edx
0x8048659:   75 05                           	jnz 0x8048660 <frame_dummy+0x10>
0x804865b:   eb 93                           	jmp 0x80485f0 <register_tm_clones>
0x804865d:   8d 76 00                        	lea esi, dword [ esi + 0x0 ]
0x8048660:   ba 00 00 00 00                  	mov edx, 0x0
0x8048665:   85 d2                           	test edx, edx
0x8048667:   74 f2                           	jz 0x804865b <frame_dummy+0xb>
0x8048669:   55                              	push ebp
0x804866a:   89 e5                           	mov ebp, esp
0x804866c:   83 ec 14                        	sub esp, 0x14
0x804866f:   50                              	push eax
0x8048670:   ff d2                           	call edx
0x8048672:   83 c4 10                        	add esp, 0x10
0x8048675:   c9                              	leave
0x8048676:   e9 75 ff ff ff                  	jmp 0x80485f0 <register_tm_clones>
; function: main at 0x804867b -- 0x804887f
0x804867b:   8d 4c 24 04                     	lea ecx, dword [ esp + 0x4 ]
0x804867f:   83 e4 f0                        	and esp, 0xfffffff0
0x8048682:   ff 71 fc                        	push dword [ ecx + 0xfffffffc ]
0x8048685:   55                              	push ebp
0x8048686:   89 e5                           	mov ebp, esp
0x8048688:   51                              	push ecx
0x8048689:   81 ec 84 01 00 00               	sub esp, 0x184
0x804868f:   89 c8                           	mov eax, ecx
0x8048691:   8b 40 04                        	mov eax, dword [ eax + 0x4 ]
0x8048694:   89 85 84 fe ff ff               	mov dword [ ebp + 0xfffffe84 ], eax
0x804869a:   65                              	
0x804869b:   a1 14 00 00 00                  	mov eax, dword [ 0x14 ]
0x80486a0:   89 45 f4                        	mov dword [ ebp + 0xfffffff4 ], eax
0x80486a3:   31 c0                           	xor eax, eax
0x80486a5:   c7 85 98 fe ff ff 00 00 00 00   	mov dword [ ebp + 0xfffffe98 ], 0x0
0x80486af:   a1 44 a0 04 08                  	mov eax, dword [ 0x804a044 ]
0x80486b4:   83 ec 08                        	sub esp, 0x8
0x80486b7:   6a 00                           	push 0x0
0x80486b9:   50                              	push eax
0x80486ba:   e8 01 fe ff ff                  	call 0x80484c0 <setbuf>
0x80486bf:   83 c4 10                        	add esp, 0x10
0x80486c2:   83 ec 08                        	sub esp, 0x8
0x80486c5:   68 00 89 04 08                  	push 0x8048900
0x80486ca:   68 02 89 04 08                  	push 0x8048902 ; "flag.txt"
0x80486cf:   e8 6c fe ff ff                  	call 0x8048540 <fopen>
0x80486d4:   83 c4 10                        	add esp, 0x10
0x80486d7:   89 85 9c fe ff ff               	mov dword [ ebp + 0xfffffe9c ], eax
0x80486dd:   83 bd 9c fe ff ff 00            	cmp dword [ ebp + 0xfffffe9c ], 0x0
0x80486e4:   75 21                           	jnz 0x8048707 <main+0x8c>
0x80486e6:   a1 40 a0 04 08                  	mov eax, dword [ 0x804a040 ]
0x80486eb:   50                              	push eax
0x80486ec:   6a 19                           	push 0x19
0x80486ee:   6a 01                           	push 0x1
0x80486f0:   68 0b 89 04 08                  	push 0x804890b ; "Failed to open flag file\n"
0x80486f5:   e8 06 fe ff ff                  	call 0x8048500 <fwrite>
0x80486fa:   83 c4 10                        	add esp, 0x10
0x80486fd:   83 ec 0c                        	sub esp, 0xc
0x8048700:   6a 01                           	push 0x1
0x8048702:   e8 19 fe ff ff                  	call 0x8048520 <exit>
0x8048707:   83 ec 04                        	sub esp, 0x4
0x804870a:   8d 85 a4 fe ff ff               	lea eax, dword [ ebp + 0xfffffea4 ]
0x8048710:   50                              	push eax
0x8048711:   68 25 89 04 08                  	push 0x8048925 ; "%39s"
0x8048716:   ff b5 9c fe ff ff               	push dword [ ebp + 0xfffffe9c ]
0x804871c:   e8 bf fd ff ff                  	call 0x80484e0 <fscanf>
0x8048721:   83 c4 10                        	add esp, 0x10
0x8048724:   83 ec 0c                        	sub esp, 0xc
0x8048727:   68 2a 89 04 08                  	push 0x804892a ; "Enter the flag\n"
0x804872c:   e8 df fd ff ff                  	call 0x8048510 <puts>
0x8048731:   83 c4 10                        	add esp, 0x10
0x8048734:   83 ec 08                        	sub esp, 0x8
0x8048737:   8d 85 cc fe ff ff               	lea eax, dword [ ebp + 0xfffffecc ]
0x804873d:   50                              	push eax
0x804873e:   68 25 89 04 08                  	push 0x8048925 ; "%39s"
0x8048743:   e8 18 fe ff ff                  	call 0x8048560 <scanf>
0x8048748:   83 c4 10                        	add esp, 0x10
0x804874b:   8d 85 f4 fe ff ff               	lea eax, dword [ ebp + 0xfffffef4 ]
0x8048751:   89 85 a0 fe ff ff               	mov dword [ ebp + 0xfffffea0 ], eax
0x8048757:   8b 85 a0 fe ff ff               	mov eax, dword [ ebp + 0xfffffea0 ]
0x804875d:   c7 00 59 6f 75 20               	mov dword [ eax ], 0x20756f59
0x8048763:   c7 40 04 73 61 69 64            	mov dword [ eax + 0x4 ], 0x64696173
0x804876a:   66 c7 40 08 20 00               	mov word [ eax + 0x8 ], 0x20
0x8048770:   83 85 98 fe ff ff 09            	add dword [ ebp + 0xfffffe98 ], 0x9
0x8048777:   b8 00 01 00 00                  	mov eax, 0x100
0x804877c:   2b 85 98 fe ff ff               	sub eax, dword [ ebp + 0xfffffe98 ]
0x8048782:   8b 8d a0 fe ff ff               	mov ecx, dword [ ebp + 0xfffffea0 ]
0x8048788:   8b 95 98 fe ff ff               	mov edx, dword [ ebp + 0xfffffe98 ]
0x804878e:   01 d1                           	add ecx, edx
0x8048790:   83 ec 04                        	sub esp, 0x4
0x8048793:   8d 95 cc fe ff ff               	lea edx, dword [ ebp + 0xfffffecc ]
0x8048799:   52                              	push edx
0x804879a:   50                              	push eax
0x804879b:   51                              	push ecx
0x804879c:   e8 af fd ff ff                  	call 0x8048550 <snprintf>
0x80487a1:   83 c4 10                        	add esp, 0x10
0x80487a4:   89 85 94 fe ff ff               	mov dword [ ebp + 0xfffffe94 ], eax
0x80487aa:   b8 00 01 00 00                  	mov eax, 0x100
0x80487af:   2b 85 98 fe ff ff               	sub eax, dword [ ebp + 0xfffffe98 ]
0x80487b5:   3b 85 94 fe ff ff               	cmp eax, dword [ ebp + 0xfffffe94 ]
0x80487bb:   73 11                           	jnc 0x80487ce <main+0x153>
0x80487bd:   b8 ff 00 00 00                  	mov eax, 0xff
0x80487c2:   2b 85 98 fe ff ff               	sub eax, dword [ ebp + 0xfffffe98 ]
0x80487c8:   89 85 94 fe ff ff               	mov dword [ ebp + 0xfffffe94 ], eax
0x80487ce:   8b 85 94 fe ff ff               	mov eax, dword [ ebp + 0xfffffe94 ]
0x80487d4:   01 85 98 fe ff ff               	add dword [ ebp + 0xfffffe98 ], eax
0x80487da:   83 ec 08                        	sub esp, 0x8
0x80487dd:   8d 85 a4 fe ff ff               	lea eax, dword [ ebp + 0xfffffea4 ]
0x80487e3:   50                              	push eax
0x80487e4:   8d 85 cc fe ff ff               	lea eax, dword [ ebp + 0xfffffecc ]
0x80487ea:   50                              	push eax
0x80487eb:   e8 e0 fc ff ff                  	call 0x80484d0 <strcmp>
0x80487f0:   83 c4 10                        	add esp, 0x10
0x80487f3:   85 c0                           	test eax, eax
0x80487f5:   75 2d                           	jnz 0x8048824 <main+0x1a9>
0x80487f7:   b8 00 01 00 00                  	mov eax, 0x100
0x80487fc:   2b 85 98 fe ff ff               	sub eax, dword [ ebp + 0xfffffe98 ]
0x8048802:   8b 8d a0 fe ff ff               	mov ecx, dword [ ebp + 0xfffffea0 ]
0x8048808:   8b 95 98 fe ff ff               	mov edx, dword [ ebp + 0xfffffe98 ]
0x804880e:   01 ca                           	add edx, ecx
0x8048810:   83 ec 04                        	sub esp, 0x4
0x8048813:   68 3a 89 04 08                  	push 0x804893a ; " which is correct!!\n"
0x8048818:   50                              	push eax
0x8048819:   52                              	push edx
0x804881a:   e8 31 fd ff ff                  	call 0x8048550 <snprintf>
0x804881f:   83 c4 10                        	add esp, 0x10
0x8048822:   eb 2b                           	jmp 0x804884f <main+0x1d4>
0x8048824:   b8 00 01 00 00                  	mov eax, 0x100
0x8048829:   2b 85 98 fe ff ff               	sub eax, dword [ ebp + 0xfffffe98 ]
0x804882f:   8b 8d a0 fe ff ff               	mov ecx, dword [ ebp + 0xfffffea0 ]
0x8048835:   8b 95 98 fe ff ff               	mov edx, dword [ ebp + 0xfffffe98 ]
0x804883b:   01 ca                           	add edx, ecx
0x804883d:   83 ec 04                        	sub esp, 0x4
0x8048840:   68 4f 89 04 08                  	push 0x804894f ; " which is incorrect!!\n"
0x8048845:   50                              	push eax
0x8048846:   52                              	push edx
0x8048847:   e8 04 fd ff ff                  	call 0x8048550 <snprintf>
0x804884c:   83 c4 10                        	add esp, 0x10
0x804884f:   83 ec 0c                        	sub esp, 0xc
0x8048852:   8d 85 f4 fe ff ff               	lea eax, dword [ ebp + 0xfffffef4 ]
0x8048858:   50                              	push eax
0x8048859:   e8 b2 fc ff ff                  	call 0x8048510 <puts>
0x804885e:   83 c4 10                        	add esp, 0x10
0x8048861:   b8 00 00 00 00                  	mov eax, 0x0
0x8048866:   8b 4d f4                        	mov ecx, dword [ ebp + 0xfffffff4 ]
0x8048869:   65                              	
0x804886a:   33 0d 14 00 00 00               	xor ecx, dword [ 0x14 ]
0x8048870:   74 05                           	jz 0x8048877 <main+0x1fc>
0x8048872:   e8 79 fc ff ff                  	call 0x80484f0 <__stack_chk_fail>
0x8048877:   8b 4d fc                        	mov ecx, dword [ ebp + 0xfffffffc ]
0x804887a:   c9                              	leave
0x804887b:   8d 61 fc                        	lea esp, dword [ ecx + 0xfffffffc ]
0x804887e:   c3                              	ret
0x804887f:   90                              	nop
; function: __libc_csu_init at 0x8048880 -- 0x80488dc
0x8048880:   55                              	push ebp
0x8048881:   57                              	push edi
0x8048882:   56                              	push esi
0x8048883:   53                              	push ebx
0x8048884:   e8 27 fd ff ff                  	call 0x80485b0 <__x86.get_pc_thunk.bx>
0x8048889:   81 c3 77 17 00 00               	add ebx, 0x1777
0x804888f:   83 ec 0c                        	sub esp, 0xc
0x8048892:   8b 6c 24 20                     	mov ebp, dword [ esp + 0x20 ]
0x8048896:   8d b3 0c ff ff ff               	lea esi, dword [ ebx + 0xffffff0c ]
0x804889c:   e8 e7 fb ff ff                  	call 0x8048488 <_init>
0x80488a1:   8d 83 08 ff ff ff               	lea eax, dword [ ebx + 0xffffff08 ]
0x80488a7:   29 c6                           	sub esi, eax
0x80488a9:   c1 fe 02                        	sar esi, 0x2
0x80488ac:   85 f6                           	test esi, esi
0x80488ae:   74 25                           	jz 0x80488d5 <__libc_csu_init+0x55>
0x80488b0:   31 ff                           	xor edi, edi
0x80488b2:   8d b6 00 00 00 00               	lea esi, dword [ esi + 0x0 ]
0x80488b8:   83 ec 04                        	sub esp, 0x4
0x80488bb:   ff 74 24 2c                     	push dword [ esp + 0x2c ]
0x80488bf:   ff 74 24 2c                     	push dword [ esp + 0x2c ]
0x80488c3:   55                              	push ebp
0x80488c4:   ff 94 bb 08 ff ff ff            	call dword [ ebx + edi * 0x2 + 0xffffff08 ]
0x80488cb:   83 c7 01                        	add edi, 0x1
0x80488ce:   83 c4 10                        	add esp, 0x10
0x80488d1:   39 f7                           	cmp edi, esi
0x80488d3:   75 e3                           	jnz 0x80488b8 <__libc_csu_init+0x38>
0x80488d5:   83 c4 0c                        	add esp, 0xc
0x80488d8:   5b                              	pop ebx
0x80488d9:   5e                              	pop esi
0x80488da:   5f                              	pop edi
0x80488db:   5d                              	pop ebp
0x80488dc:   c3                              	ret
; function: function_80488dd at 0x80488dd -- 0x80488df
0x80488dd:   8d 76 00                        	lea esi, dword [ esi + 0x0 ]
; function: __libc_csu_fini at 0x80488e0 -- 0x80488e1
0x80488e0:   f3 c3                           	rep ret
; section: .fini
; function: _fini at 0x80488e4 -- 0x80488f7
0x80488e4:   53                              	push ebx
0x80488e5:   83 ec 08                        	sub esp, 0x8
0x80488e8:   e8 c3 fc ff ff                  	call 0x80485b0 <__x86.get_pc_thunk.bx>
0x80488ed:   81 c3 13 17 00 00               	add ebx, 0x1713
0x80488f3:   83 c4 08                        	add esp, 0x8
0x80488f6:   5b                              	pop ebx
0x80488f7:   c3                              	ret

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00                                           |.2.             |
; section: .gnu.hash
0x80481ac:   03 00 00 00 0d 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 23 02 22 0d 00 00 00  0e 00 00 00 00 00 00 00   |.#."............|
0x80481cc:   29 1d 8c 1c 38 f2 8b 1c  ad 4b e3 c0               |)...8....K..    |
; section: .dynsym
0x80481d8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481e8:   6f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |o...............|
0x80481f8:   76 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |v...............|
0x8048208:   51 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |Q...............|
0x8048218:   39 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |9...............|
0x8048228:   68 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |h...............|
0x8048238:   34 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |4...............|
0x8048248:   98 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x8048258:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048268:   7d 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |}...............|
0x8048278:   1f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048288:   8f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048298:   25 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |%...............|
0x80482a8:   4a 00 00 00 44 a0 04 08  04 00 00 00 11 00 1a 00   |J...D...........|
0x80482b8:   61 00 00 00 40 a0 04 08  04 00 00 00 11 00 1a 00   |a...@...........|
0x80482c8:   0b 00 00 00 fc 88 04 08  04 00 00 00 11 00 10 00   |................|
; section: .dynstr
0x80482d8:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x80482e8:   74 64 69 6e 5f 75 73 65  64 00 65 78 69 74 00 66   |tdin_used.exit.f|
0x80482f8:   6f 70 65 6e 00 5f 5f 69  73 6f 63 39 39 5f 73 63   |open.__isoc99_sc|
0x8048308:   61 6e 66 00 70 75 74 73  00 5f 5f 73 74 61 63 6b   |anf.puts.__stack|
0x8048318:   5f 63 68 6b 5f 66 61 69  6c 00 73 74 64 6f 75 74   |_chk_fail.stdout|
0x8048328:   00 5f 5f 69 73 6f 63 39  39 5f 66 73 63 61 6e 66   |.__isoc99_fscanf|
0x8048338:   00 73 74 64 65 72 72 00  66 77 72 69 74 65 00 73   |.stderr.fwrite.s|
0x8048348:   65 74 62 75 66 00 73 74  72 63 6d 70 00 5f 5f 6c   |etbuf.strcmp.__l|
0x8048358:   69 62 63 5f 73 74 61 72  74 5f 6d 61 69 6e 00 73   |ibc_start_main.s|
0x8048368:   6e 70 72 69 6e 74 66 00  5f 5f 67 6d 6f 6e 5f 73   |nprintf.__gmon_s|
0x8048378:   74 61 72 74 5f 5f 00 47  4c 49 42 43 5f 32 2e 31   |tart__.GLIBC_2.1|
0x8048388:   00 47 4c 49 42 43 5f 32  2e 34 00 47 4c 49 42 43   |.GLIBC_2.4.GLIBC|
0x8048398:   5f 32 2e 37 00 47 4c 49  42 43 5f 32 2e 30 00      |_2.7.GLIBC_2.0. |
; section: .gnu.version
0x80483a8:   00 00 02 00 02 00 03 00  04 00 02 00 02 00 00 00   |................|
0x80483b8:   02 00 02 00 05 00 02 00  03 00 02 00 02 00 01 00   |................|
; section: .gnu.version_r
0x80483c8:   01 00 04 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x80483d8:   11 69 69 0d 00 00 05 00  a7 00 00 00 10 00 00 00   |.ii.............|
0x80483e8:   14 69 69 0d 00 00 04 00  b1 00 00 00 10 00 00 00   |.ii.............|
0x80483f8:   17 69 69 0d 00 00 03 00  bb 00 00 00 10 00 00 00   |.ii.............|
0x8048408:   10 69 69 0d 00 00 02 00  c5 00 00 00 00 00 00 00   |.ii.............|
; section: .rel.dyn
0x8048418:   fc 9f 04 08 06 07 00 00  40 a0 04 08 05 0e 00 00   |........@.......|
0x8048428:   44 a0 04 08 05 0d 00 00                            |D.......        |
; section: .rel.plt
0x8048430:   0c a0 04 08 07 01 00 00  10 a0 04 08 07 02 00 00   |................|
0x8048440:   14 a0 04 08 07 03 00 00  18 a0 04 08 07 04 00 00   |................|
0x8048450:   1c a0 04 08 07 05 00 00  20 a0 04 08 07 06 00 00   |........ .......|
0x8048460:   24 a0 04 08 07 08 00 00  28 a0 04 08 07 09 00 00   |$.......(.......|
0x8048470:   2c a0 04 08 07 0a 00 00  30 a0 04 08 07 0b 00 00   |,.......0.......|
0x8048480:   34 a0 04 08 07 0c 00 00                            |4.......        |
; section: .rodata
0x80488f8:   03 00 00 00 01 00 02 00  72 00                     |........r.      |
0x8048902:   66 6c 61 67 2e 74 78 74  00                        |flag.txt.       |   "flag.txt"
0x804890b:   46 61 69 6c 65 64 20 74  6f 20 6f 70 65 6e 20 66   |Failed to open f|   "Failed to open flag file\n"
0x804891b:   6c 61 67 20 66 69 6c 65  0a 00                     |lag file..      |
0x8048925:   25 33 39 73 00                                     |%39s.           |   "%39s"
0x804892a:   45 6e 74 65 72 20 74 68  65 20 66 6c 61 67 0a 00   |Enter the flag..|   "Enter the flag\n"
0x804893a:   20 77 68 69 63 68 20 69  73 20 63 6f 72 72 65 63   | which is correc|   " which is correct!!\n"
0x804894a:   74 21 21 0a 00                                     |t!!..           |
0x804894f:   20 77 68 69 63 68 20 69  73 20 69 6e 63 6f 72 72   | which is incorr|   " which is incorrect!!\n"
0x804895f:   65 63 74 21 21 0a 00                               |ect!!..         |
; section: .eh_frame_hdr
0x8048968:   01 1b 03 3b 28 00 00 00  04 00 00 00 48 fb ff ff   |...;(.......H...|
0x8048978:   44 00 00 00 13 fd ff ff  68 00 00 00 18 ff ff ff   |D.......h.......|
0x8048988:   98 00 00 00 78 ff ff ff  e4 00 00 00               |....x.......    |
; section: .eh_frame
0x8048994:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x80489a4:   1b 0c 04 04 88 01 00 00  20 00 00 00 1c 00 00 00   |........ .......|
0x80489b4:   fc fa ff ff c0 00 00 00  00 0e 08 46 0e 0c 4a 0f   |...........F..J.|
0x80489c4:   0b 74 04 78 00 3f 1a 3b  2a 32 24 22 2c 00 00 00   |.t.x.?.;*2$",...|
0x80489d4:   40 00 00 00 a3 fc ff ff  04 02 00 00 00 44 0c 01   |@............D..|
0x80489e4:   00 47 10 05 02 75 00 43  0f 03 75 7c 06 03 f1 01   |.G...u.C..u|....|
0x80489f4:   0c 01 00 41 c5 43 0c 04  04 00 00 00 48 00 00 00   |...A.C......H...|
0x8048a04:   70 00 00 00 78 fe ff ff  5d 00 00 00 00 41 0e 08   |p...x...]....A..|
0x8048a14:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x8048a24:   05 4e 0e 20 69 0e 24 44  0e 28 44 0e 2c 41 0e 30   |.N. i.$D.(D.,A.0|
0x8048a34:   4d 0e 20 47 0e 14 41 c3  0e 10 41 c6 0e 0c 41 c7   |M. G..A...A...A.|
0x8048a44:   0e 08 41 c5 0e 04 00 00  10 00 00 00 bc 00 00 00   |..A.............|
0x8048a54:   8c fe ff ff 02 00 00 00  00 00 00 00 00 00 00 00   |................|
; section: .init_array
0x8049f08:   50 86 04 08                                        |P...            |
; section: .fini_array
0x8049f0c:   30 86 04 08                                        |0...            |
; section: .jcr
0x8049f10:   00 00 00 00                                        |....            |
; section: .dynamic
0x8049f14:   01 00 00 00 01 00 00 00  0c 00 00 00 88 84 04 08   |................|
0x8049f24:   0d 00 00 00 e4 88 04 08  19 00 00 00 08 9f 04 08   |................|
0x8049f34:   1b 00 00 00 04 00 00 00  1a 00 00 00 0c 9f 04 08   |................|
0x8049f44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x8049f54:   05 00 00 00 d8 82 04 08  06 00 00 00 d8 81 04 08   |................|
0x8049f64:   0a 00 00 00 cf 00 00 00  0b 00 00 00 10 00 00 00   |................|
0x8049f74:   15 00 00 00 00 00 00 00  03 00 00 00 00 a0 04 08   |................|
0x8049f84:   02 00 00 00 58 00 00 00  14 00 00 00 11 00 00 00   |....X...........|
0x8049f94:   17 00 00 00 30 84 04 08  11 00 00 00 18 84 04 08   |....0...........|
0x8049fa4:   12 00 00 00 18 00 00 00  13 00 00 00 08 00 00 00   |................|
0x8049fb4:   fe ff ff 6f c8 83 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x8049fc4:   f0 ff ff 6f a8 83 04 08  00 00 00 00 00 00 00 00   |...o............|
0x8049fd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049fe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049ff4:   00 00 00 00 00 00 00 00                            |........        |
; section: .got
0x8049ffc:   00 00 00 00                                        |....            |
; section: .got.plt
0x804a000:   14 9f 04 08 00 00 00 00  00 00 00 00 c6 84 04 08   |................|
0x804a010:   d6 84 04 08 e6 84 04 08  f6 84 04 08 06 85 04 08   |................|
0x804a020:   16 85 04 08 26 85 04 08  36 85 04 08 46 85 04 08   |....&...6...F...|
0x804a030:   56 85 04 08 66 85 04 08                            |V...f...        |
; section: .data
0x804a038:   00 00 00 00 00 00 00 00                            |........        |
